检查当前文件状态
$ git status

跟踪新文件
$ git add file_name
#此时再运行 git status 命令,只要在 Changes to be committed 这行下面的，就说明是已暂存状态。

git status -s 命令或 git status --short
$ git status -s
?M README
MM Rakefile
A lib/git.rb
M lib/simplegit.rb
?? LICENSE.txt

新添加的未跟踪文件前面有 ?? 标记，新添加到暂存区中的文件前面有 A 标记，修改过的文件前面有 M 标记。你
可能注意到了 M 有两个可以出现的位置，出现在右边的 M 表示该文件被修改了但是还没放入暂存区，出现在靠左
边的 M 表示该文件被修改了并放入了暂存区。例如，上面的状态报告显示： README 文件在工作区被修改了但是
还没有将修改后的文件放入暂存区,lib/simplegit.rb 文件被修改了并将修改后的文件放入了暂存区。而
Rakefile 在工作区被修改并提交到暂存区后又在工作区中被修改了，所以在暂存区和工作区都有该文件被修改
了的记录。

忽略文件   .gitignore
$ cat .gitignore
*.[oa]
*~
第一行所有以 .o 或 .a 结尾的文件
第二行忽略所有以波浪符（~）结尾的文件
文件 .gitignore 的格式规范如下：
. 所有空行或者以 ＃ 开头的行都会被 Git 忽略。
. 可以使用标准的 glob 模式匹配。
. 匹配模式可以以（/）开头防止递归。
. 匹配模式可以以（/）结尾指定目录。
. 要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。

